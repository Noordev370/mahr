import postgres from "postgres";
import config from "./config.js";

const sql = postgres("postgres://node:node@'127.0.0.1':5432/noor", {
  username: "node",
  password: "node",
  database: "noor",
  host: "127.0.0.1",
  port: 5432,
});

// set fields names to be the same with db tables colums names
interface IUser {
  username: string;
  password: string;
  bio: string;
  picture_file_name: string;
}

interface ICar {
  mark: string;
  price: number;
  color: string;
  model: number;
  picture_file_name: string;
  status: "available" | "sold" | "withdrawn";
}

interface ICarDB extends ICar {
  id: number;
}

async function createUser(user: IUser) {
  await sql`INSERT INTO users ${sql(user, "username", "password", "bio", "picture_file_name")}`;
}
async function getUserRecordByName(username: string) {
  const result = await sql`SELECT * FROM users WHERE username = ${username}`;
  return result;
}
async function getUserPasswordByName(username: string) {
  const result =
    await sql`SELECT password from users WHERE username = ${username}`;
  return result;
}
async function changeUserPassword(username: string, newPassword: string) {
  await sql`UPDATE users  SET password = ${newPassword} WHERE username = ${username}`;
}
async function changeUserAvatr(username: string, newImageURL: string) {
  await sql`UPDATE users  SET picture_file_name = ${newImageURL} WHERE username = ${username}`;
}
async function postCar(car: ICar) {
  // no id here beacause it will be auto generated by postgres
  await sql`INSERT INTO cars ${sql(car, "mark", "price", "color", "model", "picture_file_name", "status")}`;
}
async function getCarRecordByID(carID: number) {
  const result = await sql`SELECT * FROM cars WHERE id = ${carID}`;
  return result;
}

async function getAllAvilableCarsToBuy() {
  const result = await sql`SELECT * FROM cars WHERE status = 'availabil'`;
  return result;
}
async function setCarSold(carID: number) {
  await sql`UPDATE cars SET status = 'sold' WHERE id = ${carID}`;
}

export default {
  createUser,
  getUserRecordByName,
  getUserPasswordByName,
  changeUserPassword,
  changeUserAvatr,
  postCar,
  getCarRecordByID,
  getAllAvilableCarsToBuy,
  setCarSold,
};
